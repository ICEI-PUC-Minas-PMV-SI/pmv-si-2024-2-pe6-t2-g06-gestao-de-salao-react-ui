{"ast":null,"code":"// agendamentosAPI.ts\nexport const getAgendamentosAPI = async (token, userId) => {\n  try {\n    const response = await fetch(`https://localhost:5001/gateway/Agendamentos/usuario/${userId}`, {\n      method: 'GET',\n      // Usamos GET para pegar os dados\n      headers: {\n        'Content-Type': 'application/json',\n        // Tipo de conteúdo esperado\n        'Authorization': `Bearer ${token}`,\n        // Adicionando o token no cabeçalho\n        'Accept': 'application/json' // Aceitando resposta em JSON\n      }\n    });\n\n    // Verificando se a resposta é OK (status no intervalo de 200-299)\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json(); // Fazendo parse do JSON na resposta\n    console.log(data); // Logando os dados recebidos\n    return data; // Retornando os dados dos agendamentos\n  } catch (error) {\n    console.error('Error fetching agendamentos:', error); // Logando o erro para debug\n    throw error; // Relançando o erro para tratamento em outro lugar\n  }\n};","map":{"version":3,"names":["getAgendamentosAPI","token","userId","response","fetch","method","headers","ok","Error","status","data","json","console","log","error"],"sources":["C:/ProjetoSalao/pmv-si-2024-2-pe6-t2-g06-gestao-de-salao-react-ui/src/Pages/api/AgendamentoAPI.tsx"],"sourcesContent":["// agendamentosAPI.ts\r\nexport const getAgendamentosAPI = async (token: string, userId: number) => {\r\n    try {\r\n      const response = await fetch(`https://localhost:5001/gateway/Agendamentos/usuario/${userId}`, {\r\n        method: 'GET', // Usamos GET para pegar os dados\r\n        headers: {\r\n          'Content-Type': 'application/json', // Tipo de conteúdo esperado\r\n          'Authorization': `Bearer ${token}`, // Adicionando o token no cabeçalho\r\n          'Accept': 'application/json' // Aceitando resposta em JSON\r\n        }\r\n      });\r\n  \r\n      // Verificando se a resposta é OK (status no intervalo de 200-299)\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n  \r\n      const data = await response.json(); // Fazendo parse do JSON na resposta\r\n      console.log(data); // Logando os dados recebidos\r\n      return data; // Retornando os dados dos agendamentos\r\n    } catch (error) {\r\n      console.error('Error fetching agendamentos:', error); // Logando o erro para debug\r\n      throw error; // Relançando o erro para tratamento em outro lugar\r\n    }\r\n  };\r\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,kBAAkB,GAAG,MAAAA,CAAOC,KAAa,EAAEC,MAAc,KAAK;EACvE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuDF,MAAM,EAAE,EAAE;MAC5FG,MAAM,EAAE,KAAK;MAAE;MACfC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAAE;QACpC,eAAe,EAAE,UAAUL,KAAK,EAAE;QAAE;QACpC,QAAQ,EAAE,kBAAkB,CAAC;MAC/B;IACF,CAAC,CAAC;;IAEF;IACA,IAAI,CAACE,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBL,QAAQ,CAACM,MAAM,EAAE,CAAC;IAC3D;IAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;IACpCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;IACnB,OAAOA,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC,CAAC;IACtD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}