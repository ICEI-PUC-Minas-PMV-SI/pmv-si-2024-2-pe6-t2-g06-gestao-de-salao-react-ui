{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProjetoSalao\\\\pmv-si-2024-2-pe6-t2-g06-gestao-de-salao-react-ui\\\\src\\\\Pages\\\\Context\\\\UserProvider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\n// Ensure this type includes only the necessary properties\nimport { useNavigate } from \"react-router-dom\";\nimport { loginAPI } from \"../Services/AuthService\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext({});\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n\n  // Load stored token and user data from local storage on initial mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    const storedToken = localStorage.getItem(\"token\");\n    console.log(storedToken);\n    if (storedUser && storedToken) {\n      setUser(JSON.parse(storedUser));\n      setToken(storedToken);\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${storedToken}`;\n    }\n    setIsReady(true); // Indicate that the user context is ready\n  }, []);\n\n  // Login function\n  const loginUser = async (email, senha) => {\n    try {\n      const res = await loginAPI(email, senha);\n      if (res) {\n        const {\n          jwtToken,\n          userId\n        } = res; // Correctly extract jwtToken and userId\n\n        // Save token and user data to local storage\n        localStorage.setItem(\"token\", jwtToken);\n        const userObj = {\n          email,\n          senha,\n          userId\n        }; // Create a user profile object without password for security\n\n        // Set state and axios authorization header\n        setToken(jwtToken);\n        setUser(userObj);\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${jwtToken}`;\n        toast.success(\"Login Successful!\");\n\n        // Return the userId for redirection\n        return userId;\n      } else {\n        throw new Error(\"Invalid login response\");\n      }\n    } catch (error) {\n      const errorMessage = getErrorMessage(error);\n      toast.error(errorMessage);\n      throw new Error(errorMessage); // Throw error to propagate back to the LoginPage for handling\n    }\n  };\n\n  // Function to get error message\n  const getErrorMessage = error => {\n    if (error.response) {\n      console.error(\"Login error:\", error.response.data);\n      return \"Login failed: \" + error.response.data.message;\n    } else if (error.request) {\n      console.error(\"No response received:\", error.request);\n      return \"No response from server. Please try again later.\";\n    } else {\n      console.error(\"Error:\", error.message);\n      return \"An error occurred during login.\";\n    }\n  };\n\n  // Check if user is logged in\n  const isLoggedIn = () => !!token; // Check if token exists to determine login status\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    setToken(null);\n    delete axios.defaults.headers.common[\"Authorization\"]; // Clear the authorization header\n    navigate(\"/\"); // Redirect to homepage after logout\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      loginUser,\n      user,\n      token,\n      logout,\n      isLoggedIn\n    },\n    children: isReady ? children : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n// Hook to use the authentication context\n_s(UserProvider, \"A267/A8Ei/3Lm9oqvFzwbRuflcs=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProvider;\nexport const useAuth = () => {\n  _s2();\n  return React.useContext(UserContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useNavigate","loginAPI","toast","axios","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","navigate","token","setToken","user","setUser","isReady","setIsReady","storedUser","localStorage","getItem","storedToken","console","log","JSON","parse","defaults","headers","common","loginUser","email","senha","res","jwtToken","userId","setItem","userObj","success","Error","error","errorMessage","getErrorMessage","response","data","message","request","isLoggedIn","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","useContext","$RefreshReg$"],"sources":["C:/ProjetoSalao/pmv-si-2024-2-pe6-t2-g06-gestao-de-salao-react-ui/src/Pages/Context/UserProvider.tsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport { UserProfile } from \"../Models/User\"; // Ensure this type includes only the necessary properties\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginAPI } from \"../Services/AuthService\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\ntype UserContextType = {\r\n    user: UserProfile | null;\r\n    token: string | null;\r\n    loginUser: (email: string, senha: string) => Promise<string>; // Return userId as a string\r\n    logout: () => void;\r\n    isLoggedIn: () => boolean;\r\n};\r\n\r\ntype Props = { children: React.ReactNode };\r\n\r\nconst UserContext = createContext<UserContextType>({} as UserContextType);\r\n\r\nexport const UserProvider = ({ children }: Props) => {\r\n    const navigate = useNavigate();\r\n    const [token, setToken] = useState<string | null>(null);\r\n    const [user, setUser] = useState<UserProfile | null>(null);\r\n    const [isReady, setIsReady] = useState(false);\r\n\r\n    // Load stored token and user data from local storage on initial mount\r\n    useEffect(() => {\r\n        const storedUser = localStorage.getItem(\"user\");\r\n        const storedToken = localStorage.getItem(\"token\");\r\n\r\n        console.log(storedToken);\r\n\r\n        if (storedUser && storedToken) {\r\n            setUser(JSON.parse(storedUser));\r\n            setToken(storedToken);\r\n            axios.defaults.headers.common[\"Authorization\"] = `Bearer ${storedToken}`;\r\n        }\r\n        setIsReady(true); // Indicate that the user context is ready\r\n    }, []);\r\n\r\n    // Login function\r\n    const loginUser = async (email: string, senha: string): Promise<string> => {\r\n        try {\r\n            const res = await loginAPI(email, senha);\r\n            if (res) {\r\n                const { jwtToken, userId } = res; // Correctly extract jwtToken and userId\r\n\r\n                // Save token and user data to local storage\r\n                localStorage.setItem(\"token\", jwtToken);\r\n                const userObj: UserProfile = { email, senha, userId }; // Create a user profile object without password for security\r\n\r\n                // Set state and axios authorization header\r\n                setToken(jwtToken);\r\n                setUser(userObj);\r\n                axios.defaults.headers.common[\"Authorization\"] = `Bearer ${jwtToken}`;\r\n\r\n                toast.success(\"Login Successful!\");\r\n\r\n                // Return the userId for redirection\r\n                return userId;\r\n            } else {\r\n                throw new Error(\"Invalid login response\");\r\n            }\r\n        } catch (error: any) {\r\n            const errorMessage = getErrorMessage(error);\r\n            toast.error(errorMessage);\r\n            throw new Error(errorMessage); // Throw error to propagate back to the LoginPage for handling\r\n        }\r\n    };\r\n\r\n    // Function to get error message\r\n    const getErrorMessage = (error: any): string => {\r\n        if (error.response) {\r\n            console.error(\"Login error:\", error.response.data);\r\n            return \"Login failed: \" + error.response.data.message;\r\n        } else if (error.request) {\r\n            console.error(\"No response received:\", error.request);\r\n            return \"No response from server. Please try again later.\";\r\n        } else {\r\n            console.error(\"Error:\", error.message);\r\n            return \"An error occurred during login.\";\r\n        }\r\n    };\r\n\r\n    // Check if user is logged in\r\n    const isLoggedIn = () => !!token; // Check if token exists to determine login status\r\n\r\n    // Logout function\r\n    const logout = () => {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"user\");\r\n        setUser(null);\r\n        setToken(null);\r\n        delete axios.defaults.headers.common[\"Authorization\"]; // Clear the authorization header\r\n        navigate(\"/\"); // Redirect to homepage after logout\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ loginUser, user, token, logout, isLoggedIn }}>\r\n            {isReady ? children : null}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\n// Hook to use the authentication context\r\nexport const useAuth = () => React.useContext(UserContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}