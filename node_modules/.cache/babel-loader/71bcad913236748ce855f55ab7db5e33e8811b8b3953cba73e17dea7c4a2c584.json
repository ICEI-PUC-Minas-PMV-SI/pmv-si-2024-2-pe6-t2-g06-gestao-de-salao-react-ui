{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProjetoSalao\\\\pmv-si-2024-2-pe6-t2-g06-gestao-de-salao-react-ui\\\\src\\\\Pages\\\\Context\\\\useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\n// Ensure this type includes only the necessary properties\nimport { useNavigate } from \"react-router-dom\";\nimport { loginAPI } from \"../Services/AuthService\";\nimport { toast } from \"react-toastify\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext({});\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n\n  // Load stored token and user data from local storage on initial mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    const storedToken = localStorage.getItem(\"token\");\n    if (storedUser && storedToken) {\n      setUser(JSON.parse(storedUser));\n      setToken(storedToken);\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${storedToken}`;\n    }\n    setIsReady(true); // Indicate that the user context is ready\n  }, []);\n\n  // Login function\n  const loginUser = async (email, senha) => {\n    try {\n      const res = await loginAPI(email, senha);\n      if (res && res.data) {\n        const {\n          token,\n          email,\n          userName\n        } = res.data;\n\n        // Save token and user data to local storage\n        localStorage.setItem(\"token\", token);\n        const userObj = {\n          email,\n          senha\n        }; // Ensure this matches UserProfile type\n\n        // Set state and axios authorization header\n        setToken(token);\n        setUser(userObj); // This should match the UserProfile structure\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n        toast.success(\"Login Successful!\");\n        navigate(\"/search\"); // Redirect after login\n      }\n    } catch (error) {\n      if (error.response) {\n        // Server responded with a status code outside of the 2xx range\n        console.error(\"Login error:\", error.response.data);\n        toast.error(\"Login failed: \" + error.response.data.message);\n      } else if (error.request) {\n        // Request was made but no response received\n        console.error(\"No response received:\", error.request);\n        toast.error(\"No response from server. Please try again later.\");\n      } else {\n        // Something else happened during the request\n        console.error(\"Error:\", error.message);\n        toast.error(\"An error occurred during login.\");\n      }\n    }\n  };\n\n  // Check if user is logged in\n  const isLoggedIn = () => !!user;\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    setToken(null);\n    navigate(\"/\"); // Redirect to homepage after logout\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      loginUser,\n      user,\n      token,\n      logout,\n      isLoggedIn\n    },\n    children: isReady ? children : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook to use the authentication context\n_s(UserProvider, \"A267/A8Ei/3Lm9oqvFzwbRuflcs=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProvider;\nexport const useAuth = () => {\n  _s2();\n  return React.useContext(UserContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useNavigate","loginAPI","toast","React","axios","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","navigate","token","setToken","user","setUser","isReady","setIsReady","storedUser","localStorage","getItem","storedToken","JSON","parse","defaults","headers","common","loginUser","email","senha","res","data","userName","setItem","userObj","success","error","response","console","message","request","isLoggedIn","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","useContext","$RefreshReg$"],"sources":["C:/ProjetoSalao/pmv-si-2024-2-pe6-t2-g06-gestao-de-salao-react-ui/src/Pages/Context/useAuth.tsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport { UserProfile } from \"../Models/User\"; // Ensure this type includes only the necessary properties\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginAPI } from \"../Services/AuthService\";\r\nimport { toast } from \"react-toastify\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\n\r\ntype UserContextType = {\r\n  user: UserProfile | null;\r\n  token: string | null;\r\n  loginUser: (email: string, senha: string) => void;\r\n  logout: () => void;\r\n  isLoggedIn: () => boolean;\r\n};\r\n\r\ntype Props = { children: React.ReactNode };\r\n\r\nconst UserContext = createContext<UserContextType>({} as UserContextType);\r\n\r\nexport const UserProvider = ({ children }: Props) => {\r\n  const navigate = useNavigate();\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [user, setUser] = useState<UserProfile | null>(null);\r\n  const [isReady, setIsReady] = useState(false);\r\n\r\n  // Load stored token and user data from local storage on initial mount\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    const storedToken = localStorage.getItem(\"token\");\r\n\r\n    if (storedUser && storedToken) {\r\n      setUser(JSON.parse(storedUser));\r\n      setToken(storedToken);\r\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${storedToken}`;\r\n    }\r\n    setIsReady(true); // Indicate that the user context is ready\r\n  }, []);\r\n\r\n  // Login function\r\n  const loginUser = async (email: string, senha: string) => {\r\n    try {\r\n      const res = await loginAPI(email, senha);\r\n\r\n      if (res && res.data) {\r\n        const { token, email, userName } = res.data;\r\n\r\n        // Save token and user data to local storage\r\n        localStorage.setItem(\"token\", token);\r\n        const userObj: UserProfile = { email, senha }; // Ensure this matches UserProfile type\r\n\r\n        // Set state and axios authorization header\r\n        setToken(token);\r\n        setUser(userObj); // This should match the UserProfile structure\r\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n\r\n        toast.success(\"Login Successful!\");\r\n        navigate(\"/search\"); // Redirect after login\r\n      }\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        // Server responded with a status code outside of the 2xx range\r\n        console.error(\"Login error:\", error.response.data);\r\n        toast.error(\"Login failed: \" + error.response.data.message);\r\n      } else if (error.request) {\r\n        // Request was made but no response received\r\n        console.error(\"No response received:\", error.request);\r\n        toast.error(\"No response from server. Please try again later.\");\r\n      } else {\r\n        // Something else happened during the request\r\n        console.error(\"Error:\", error.message);\r\n        toast.error(\"An error occurred during login.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Check if user is logged in\r\n  const isLoggedIn = () => !!user;\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    setUser(null);\r\n    setToken(null);\r\n    navigate(\"/\"); // Redirect to homepage after logout\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{ loginUser, user, token, logout, isLoggedIn }}\r\n    >\r\n      {isReady ? children : null}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook to use the authentication context\r\nexport const useAuth = () => React.useContext(UserContext);\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACZ;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY1B,MAAMC,WAAW,gBAAGV,aAAa,CAAkB,CAAC,CAAoB,CAAC;AAEzE,OAAO,MAAMW,YAAY,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAqB,IAAI,CAAC;EAC1D,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMoB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAMC,WAAW,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAEjD,IAAIF,UAAU,IAAIG,WAAW,EAAE;MAC7BN,OAAO,CAACO,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAAC;MAC/BL,QAAQ,CAACQ,WAAW,CAAC;MACrBjB,KAAK,CAACoB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,WAAW,EAAE;IAC1E;IACAJ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,SAAS,GAAG,MAAAA,CAAOC,KAAa,EAAEC,KAAa,KAAK;IACxD,IAAI;MACF,MAAMC,GAAG,GAAG,MAAM7B,QAAQ,CAAC2B,KAAK,EAAEC,KAAK,CAAC;MAExC,IAAIC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE;QACnB,MAAM;UAAEnB,KAAK;UAAEgB,KAAK;UAAEI;QAAS,CAAC,GAAGF,GAAG,CAACC,IAAI;;QAE3C;QACAZ,YAAY,CAACc,OAAO,CAAC,OAAO,EAAErB,KAAK,CAAC;QACpC,MAAMsB,OAAoB,GAAG;UAAEN,KAAK;UAAEC;QAAM,CAAC,CAAC,CAAC;;QAE/C;QACAhB,QAAQ,CAACD,KAAK,CAAC;QACfG,OAAO,CAACmB,OAAO,CAAC,CAAC,CAAC;QAClB9B,KAAK,CAACoB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUd,KAAK,EAAE;QAElEV,KAAK,CAACiC,OAAO,CAAC,mBAAmB,CAAC;QAClCxB,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;MACvB;IACF,CAAC,CAAC,OAAOyB,KAAU,EAAE;MACnB,IAAIA,KAAK,CAACC,QAAQ,EAAE;QAClB;QACAC,OAAO,CAACF,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACC,QAAQ,CAACN,IAAI,CAAC;QAClD7B,KAAK,CAACkC,KAAK,CAAC,gBAAgB,GAAGA,KAAK,CAACC,QAAQ,CAACN,IAAI,CAACQ,OAAO,CAAC;MAC7D,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;QACxB;QACAF,OAAO,CAACF,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACI,OAAO,CAAC;QACrDtC,KAAK,CAACkC,KAAK,CAAC,kDAAkD,CAAC;MACjE,CAAC,MAAM;QACL;QACAE,OAAO,CAACF,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACG,OAAO,CAAC;QACtCrC,KAAK,CAACkC,KAAK,CAAC,iCAAiC,CAAC;MAChD;IACF;EACF,CAAC;;EAED;EACA,MAAMK,UAAU,GAAGA,CAAA,KAAM,CAAC,CAAC3B,IAAI;;EAE/B;EACA,MAAM4B,MAAM,GAAGA,CAAA,KAAM;IACnBvB,YAAY,CAACwB,UAAU,CAAC,OAAO,CAAC;IAChCxB,YAAY,CAACwB,UAAU,CAAC,MAAM,CAAC;IAC/B5B,OAAO,CAAC,IAAI,CAAC;IACbF,QAAQ,CAAC,IAAI,CAAC;IACdF,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACEL,OAAA,CAACC,WAAW,CAACqC,QAAQ;IACnBC,KAAK,EAAE;MAAElB,SAAS;MAAEb,IAAI;MAAEF,KAAK;MAAE8B,MAAM;MAAED;IAAW,CAAE;IAAAhC,QAAA,EAErDO,OAAO,GAAGP,QAAQ,GAAG;EAAI;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAE3B,CAAC;;AAED;AAAAvC,EAAA,CA7EaF,YAAY;EAAA,QACNR,WAAW;AAAA;AAAAkD,EAAA,GADjB1C,YAAY;AA8EzB,OAAO,MAAM2C,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMjD,KAAK,CAACkD,UAAU,CAAC9C,WAAW,CAAC;AAAA;AAAC6C,GAAA,CAA9CD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}